---
apiVersion: v1
kind: Secret
metadata:
  name: asecretserver-passwords
data:
  # {{- range $key, $value := .Values.secrets}}
  {{$key}}: {{$value}}
  # {{- end}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: asecretserver
  labels:
    app: atestapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: atestapp-secretserver
  template:
    # no apiVersion or kind
    metadata:
      labels:
        app: atestapp-secretserver
    spec:
      containers:
        - name: asecretserver
          image: "zannen/secretserver:{{.Values.secretserverVersion}}"
          imagePullPolicy: Never
          command:
            - gunicorn
            - --bind
            - 0.0.0.0:80
            - --access-logfile
            - "-"  # Print to stdout
            - --capture-output
            - app:create_app()
          ports:
            - containerPort: 80
          startupProbe:
            httpGet:
              path: /
              port: 80
            failureThreshold: 6
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 2
            periodSeconds: 60
          volumeMounts:
            - mountPath: /var/run/passwords
              name: volume-passwords
              readOnly: true
      volumes:
        - name: volume-passwords
          secret:
            secretName: asecretserver-passwords

---
apiVersion: v1
kind: Service
metadata:
  name: asecretserver
  labels:
    app: atestapp
spec:
  ports:
    - protocol: TCP
      targetPort: 80   # in container
      port: 8880       # across cluster on ClusterIP
      nodePort: 30880  # from outside cluster
  selector:
    app: atestapp-secretserver
  type: NodePort
