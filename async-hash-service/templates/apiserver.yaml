---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apiserver
  namespace: {{.Release.Namespace}}
  labels:
    app: atestapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: apiserver
  template:
    # no apiVersion or kind
    metadata:
      labels:
        app: apiserver
    spec:
      containers:
        - name: apiserver
          image: "zannen/apiserver:{{.Values.apiserverVersion}}"
          imagePullPolicy: Never
          command:
            - gunicorn
            - --bind
            - 0.0.0.0:80
            - --access-logfile
            - "-"  # Print to stdout
            - --capture-output
            - app:create_app()
          env:
            # Redis
            - name: REDIS_URL
              value: "redis://redis-server.{{ .Release.Namespace }}.svc.cluster.local:6379"
            - name: REDIS_QUEUE
              value: "{{.Values.redisQueue}}"
            # App
            - name: TOKEN_SIGNING_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: atestapp-passwords
                  key: tokenSigningPassword
          ports:
            - containerPort: 80
          startupProbe:
            httpGet:
              path: /
              port: 80
            failureThreshold: 12
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 0
            failureThreshold: 2
            periodSeconds: 60

---
apiVersion: v1
kind: Service
metadata:
  name: apiserver
  namespace: {{.Release.Namespace}}
  labels:
    app: atestapp
spec:
  type: NodePort
  ports:
    - protocol: TCP
      targetPort: 80   # in container
      port: 8880       # across cluster on ClusterIP
      nodePort: 30880  # from outside cluster
  selector:
    app: apiserver
